<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>nz.co.gregs</groupId>
  <artifactId>regexi</artifactId>
  <version>6.0</version>
  <packaging>jar</packaging>
  <name>RegeXI</name>
  <description>A fluent API to generate and use regular expressions</description>
  <url>https://github.com/gregorydgraham/Regexi</url>
  <licenses>
    <license>
      <name>Commercial License</name>
      <comments>Commercial licenses and support are available. Check https://dbvolution.com/licensing.html for details.</comments>
    </license>
    <license>
      <name>Non-commercial License</name>
      <url>https://dbvolution.com/noncommercial_license.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
	
  <developers>
    <developer>
      <name>Gregory Graham</name>
      <email>info@gregs.co.nz</email>
      <url>http://gregs.co.nz</url>
      <timezone>+12</timezone>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/gregorydgraham/Regexi</url>
    <connection>scm:git:https://github.com/gregorydgraham/Regexi.git</connection>
    <developerConnection>scm:git:https://github.com/gregorydgraham/Regexi.git</developerConnection>
    <tag>regexi-6.0</tag>
  </scm>
	
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>10</maven.compiler.source>
    <maven.compiler.target>10</maven.compiler.target>
  </properties>
		
		
  <distributionManagement>
<!--    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>-->
<!--    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>-->
  </distributionManagement>
  <profiles>
    <profile> 
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.2.7</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.11.2</version> 
            <configuration>
              <additionalOptions>-html5</additionalOptions>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.central</groupId>
            <artifactId>central-publishing-maven-plugin</artifactId>
            <version>0.7.0</version>
            <extensions>true</extensions>
            <configuration>
              <publishingServerId>sonatype-central</publishingServerId>
              <centralBaseUrl>https://central.sonatype.com</centralBaseUrl>
              <autoPublish>true</autoPublish>
              <waitUntil>published</waitUntil>
              <failOnBuildFailure>true</failOnBuildFailure>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <!-- 
          With the SCM connection configured correctly you can perform a release deployment to OSSRH with
        
          "mvn release:clean release:prepare"
          
          then answering the prompts for versions and tags, followed by
        
          "mvn release:perform"
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <!-- sonatype prefer their own release profile -->
          <useReleaseProfile>false</useReleaseProfile>
          <!-- release profile as defined by Sonatype -->
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.11.2</version> 
        <configuration>
          <additionalOptions>-html5</additionalOptions>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
	
</project>